name: Test Branch Auto Merge

on:
  push:
    branches: [ test-* ]
  pull_request:
    types: [opened, synchronize]

jobs:
  test-and-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Check if test branch
        id: check-branch
        run: |
          if [[ "${{ github.ref }}" == refs/heads/test-* ]]; then
            echo "is_test_branch=true" >> $GITHUB_OUTPUT
          else
            echo "is_test_branch=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request to develop
        if: steps.check-branch.outputs.is_test_branch == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "test: Auto merge from test branch"
          title: "test: Auto merge from ${{ github.ref_name }}"
          body: |
            ## テスト用自動マージ
            
            テストブランチ `${{ github.ref_name }}` からの自動マージです。
            
            ### 変更内容
            - テスト用の変更が含まれています
            - 自動マージのテストを実行中
            
            ### 確認事項
            - [ ] ファイルが正しく作成されているか
            - [ ] マージが正常に実行されるか
            - [ ] ワークフローが期待通りに動作するか
          base: develop
          head: ${{ github.ref_name }}
          draft: false

      - name: Auto merge to develop
        if: steps.check-branch.outputs.is_test_branch == 'true'
        run: |
          # プルリクエストが作成されるまで少し待機
          sleep 10
          
          # 最新のプルリクエストを取得
          PR_NUMBER=$(gh pr list --base develop --head ${{ github.ref_name }} --json number --jq '.[0].number')
          
          if [ "$PR_NUMBER" != "null" ] && [ "$PR_NUMBER" != "" ]; then
            echo "Found PR #$PR_NUMBER"
            
            # プルリクエストをマージ
            gh pr merge $PR_NUMBER --merge --delete-branch
            
            echo "Successfully merged PR #$PR_NUMBER"
          else
            echo "No PR found for branch ${{ github.ref_name }}"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
